name: AWS

on:
  workflow_call:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    strategy:
      matrix:
        image:
        - django
        - webserver

    outputs:
      image-django: ${{ steps.build-image.outputs.image-django }}
      image-webserver: ${{ steps.build-image.outputs.image-webserver }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-central-1

    - name: Amazon ECR Login
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build --tag $REGISTRY/todoapp-django-${{ matrix.image }}:$IMAGE_TAG --target ${{ matrix.image }} .
        docker push $REGISTRY/todoapp-django-${{ matrix.image }}:$IMAGE_TAG
        echo "image-${{ matrix.image }}=$REGISTRY/todoapp-django-${{ matrix.image }}:$IMAGE_TAG" >> $GITHUB_OUTPUT

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-central-1

    - name: Amazon ECS Render Task Definition django
      id: task-def-django
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: .aws/task-definitions/todoapp-django.json
        container-name: django
        image: ${{ needs.build.outputs.image-django }}

    - name: Amazon ECS Render Task Definition webserver
      id: task-def-webserver
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: ${{ steps.task-def-django.outputs.task-definition }}
        container-name: webserver
        image: ${{ needs.build.outputs.image-webserver }}

    - name: Amazon ECS Deploy Task Definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def-webserver.outputs.task-definition }}
        service: todoapp-django
        cluster: main
        wait-for-service-stability: false
